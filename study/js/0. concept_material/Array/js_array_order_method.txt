
< 배열 순서 정렬 메소드 >
===============================================================================

[ reverse ]
-----------------------------------------------------------------------------------------------------------
 - 기존 배열을 거꾸로 돌릴 수 있다  -

[ array.reverse() ]

ex)
var arr =[ 1, 2, 3, 4 ];
arr.reverse();
console.log( arr );    // [ 4, 3, 2, 1 ]
-----------------------------------------------------------------------------------------------------------



[ sort ]
-----------------------------------------------------------------------------------------------------------
 - 배열의 요소들을 문자열로 취급해서, 유니코드 값 순서대로 정렬 -

[ array.sort([compareFunction]) ]

~ 특징 ~
(1). compareFunction은 두 개의 배열 요소를 인수로 받고 규칙에 따라 정렬한 "원본 배열"을 리턴한다.
(2). compareFunction을 쓰지 않을경우 배열의 요소들을 문자열로 취급해서, 유니코드 값 순서대로 정렬한다.
(3). compareFunction의 규칙은
- 1. a, b 두 개의 배열 요소를 파라미터로 입력 받습니다.
- 2. 이 함수가 리턴하는 값이 0보다 작을 경우,  a가 b보다 앞에 오도록 정렬하고,
- 3. 이 함수가 리턴하는 값이 0보다 클 경우, b가 a보다 앞에 오도록 정렬합니다.
- 4. 0을 리턴하면, a와 b의 순서를 변경하지 않습니다


ex)
var arr = [ 13, 12, 11, 10, 5, 3, 2, 1 ];
arr.sort();
console.log( arr );    // [ 1, 10, 11, 12, 13, 2, 3, 5 ];


// sort에 compareFunction로 정렬
var arr = [ 13, 12, 11, 10, 5, 3, 2, 1 ];
arr.sort( function( a, b ) {
  return a - b;
})
console.log( arr );    // [ 1, 2, 3, 5, 10, 11, 12, 13 ]
-----------------------------------------------------------------------------------------------------------
===============================================================================














[출처] : https://hianna.tistory.com/409