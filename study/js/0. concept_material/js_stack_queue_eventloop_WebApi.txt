
< 콜 스택 (Call Stack) >
===============================================================================

[ 특징 ]
-----------------------------------------------------------------------------------------------------------
후입선출(Last In First Out) 구조
-----------------------------------------------------------------------------------------------------------


[ 콜 스택이 하는 일 ]
-----------------------------------------------------------------------------------------------------------
함수가 "호출"되고 그 함수를 실행하려면 해당 함수를 스택에 집어넣게 되는데
함수에서 리턴이 일어나면, 스택의 가장 위쪽에서 해당 함수를 지우게 된다.

함수 호출 -> 함수를 콜 스택에 집어넣음 -> (함수 안에서 다른 함수호출) -> (함수를 콜 스택에 집어넣음) 
-> (함수에서 리턴 실행) -> (콜 스택에서 함수 지움) -> 함수에서 리턴 실행 -> 콜 스택에서 함수 지움
-----------------------------------------------------------------------------------------------------------


[스택 프레임]
-----------------------------------------------------------------------------------------------------------
콜 스택 에 차례대로 쌓이는 함수의 호출 정보
-----------------------------------------------------------------------------------------------------------


[ 스택 오버플로우 ]
-----------------------------------------------------------------------------------------------------------
콜 스택에 정해진 만큼의 이상의 스택 프레임이 쌓이게(가득 차게) 됐을 때 발생하는 에러
-----------------------------------------------------------------------------------------------------------

===============================================================================







< Web API >
===============================================================================

[ 특징 ]
-----------------------------------------------------------------------------------------------------------
Web API는 웹 브라우저에서 제공하는 기능으로 DOM, Ajax, TimeOut 등이 있다
이러한 요청들의 처리는 JS 엔진의 스레드(싱글스레드)와는 다른 스레드들에서 이뤄진다
-----------------------------------------------------------------------------------------------------------


[ Web API 가 하는 일 ]
-----------------------------------------------------------------------------------------------------------
콜 스택에서 실행된 비동기 함수가 요청하는 비동기 작업에 대한 정보와 콜백 함수를
Web API를 통해 브라우저에게 넘기면, 브라우저는 이러한 요청들을 별도의 스레드에 위임하게 된다.
( 해당 비동기 함수가 호출 자체는 완료되었다는 의미기 때문에 콜 스택에서 지워진다 )
그러면 그 스레드는 해당 요청이 완료되는 순간 전달받았던 콜백 함수를 콜백 큐에 집어넣는다.
-----------------------------------------------------------------------------------------------------------

===============================================================================







< 콜백 큐(= 태스크 큐) (Callback Queue(= Task Queue)) >
===============================================================================

[ 특징 ]
-----------------------------------------------------------------------------------------------------------
선입선출(First In First Out) 구조
태스크란 곧 콜백 함수를 의미하기 때문에 콜백 큐 또는 태스크 큐 라고 부른다.
-----------------------------------------------------------------------------------------------------------


[ 콜백 큐(= 태스크 큐)가 하는 일 ]
-----------------------------------------------------------------------------------------------------------
Web API 를 처리하고 있던 스레드로부터 콜백 함수를 전달받고 FIFO구조로 저장한다
-----------------------------------------------------------------------------------------------------------

===============================================================================







< 렌더 큐 (Render Queue) >
===============================================================================

[ 특징 ]
-----------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------


[ 렌더 큐(Render Queue)가 하는 일 ]
-----------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------

===============================================================================







< 이벤트 루프(Event Loop) >
===============================================================================

[ 이벤트 루프가 하는 일 ]
-----------------------------------------------------------------------------------------------------------
콜 스택( 이하 스택 )과 콜백 큐( 이하 큐 )를 주시하다가, 스택이 "비어있으면"
큐의 첫 번째 콜백 함수를 스택에 쌓아서 콜백 함수를 JS엔진이 실행할 수 있게끔 해준다

(큐에 있는 콜백함수를 스택에 쌓아서 실행하는 것도 스택이 비어 있지 않은 상태기 때문에
스택에 쌓인 콜백함수가 실행되고 스택에서 지워질  때까지 다른 콜백함수는 스택에 쌓이지 않는다.)

매 순간 스택과 큐를 확인하는 작업을 틱(Tick)이라고 부른다
-----------------------------------------------------------------------------------------------------------

===============================================================================