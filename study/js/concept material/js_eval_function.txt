===============================================================================

<eval() 함수>

eval(string)  (예시 코드 - 1 참조)
-----------------------------------------------------------------------------------------------------------
eval()은 문자로 표현된 JavaScript 코드를 실행하는 함수입니다. (문자열로 작성된 코드가 실행됨)


매개변수로 자바스크립트 "표현식, 명령문, 또는 연속되는 다수의 명령문을 나타내는 문자열"을 가짐.
표현식은 이미 존재하는 객체의 변수나 속성을 포함할 수 있음.
eval()의 인수가 문자열이 아니면 eval()은 인수를 그대로 반환합니다.

반환값으로는 주어진 코드를 평가하여 얻은 값을 반환.
값이 없다면 undefined를 반환합니다.


[단점( eval() is evil )]

1. eval()은 인수로 받은 코드를 caller의 권한으로 수행하는 위험한 함수

2. 악의적인 영향을 받았을 수 있는 문자열을 eval()로 실행한다면,
   해당 웹페이지나 확장 프로그램의 권한으로 사용자의 기기에서 악의적인 코드를 수행하는 결과를 초래

3. 제3자 코드가 eval()이 호출된 위치의 스코프를 볼 수 있으며,
   이를 이용해 비슷한 함수인 Function으로는 실현할 수 없는 공격이 가능

4. 위 1, 2, 3 으로 알 수 있듯이 보안상 굉장히 취약하다
-----------------------------------------------------------------------------------------------------------

예시 코드 - 1
-----------------------------------------------------------------------------------------------------------
console.log(eval('2 + 2'));
// 4

console.log(eval(new String('2 + 2')));
// 2 + 2

console.log(eval('2 + 2') === eval('4'));
// true

console.log(eval('2 + 2') === eval(new String('2 + 2')));
// false
-----------------------------------------------------------------------------------------------------------

결론
-----------------------------------------------------------------------------------------------------------
eval() is evil  -  eval() 함수는 해커의 공격에 취약하기 때문에 사용하지 말자
-----------------------------------------------------------------------------------------------------------

===============================================================================




























[출처] : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/eval